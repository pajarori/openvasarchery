# -*- coding: utf-8 -*-
# Generated by Django 1.11.16 on 2018-10-31 00:22
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("networkscanners", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="nessus_report_db",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("project_id", models.UUIDField(null=True)),
                ("scan_id", models.TextField(blank=True)),
                ("vul_id", models.TextField(blank=True)),
                ("agent", models.TextField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("fname", models.TextField(blank=True, null=True)),
                ("plugin_modification_date", models.TextField(blank=True, null=True)),
                ("plugin_name", models.TextField(blank=True, null=True)),
                ("plugin_publication_date", models.TextField(blank=True, null=True)),
                ("plugin_type", models.TextField(blank=True, null=True)),
                ("risk_factor", models.TextField(blank=True, null=True)),
                ("script_version", models.TextField(blank=True, null=True)),
                ("see_also", models.TextField(blank=True, null=True)),
                ("solution", models.TextField(blank=True, null=True)),
                ("synopsis", models.TextField(blank=True, null=True)),
                ("plugin_output", models.TextField(blank=True, null=True)),
                ("false_positive", models.TextField(blank=True, null=True)),
                ("pluginName", models.TextField(blank=True, null=True)),
                ("pluginID", models.TextField(blank=True, null=True)),
                ("protocol", models.TextField(blank=True, null=True)),
                ("severity", models.TextField(blank=True, null=True)),
                ("svc_name", models.TextField(blank=True, null=True)),
                ("pluginFamily", models.TextField(blank=True, null=True)),
                ("port", models.TextField(blank=True, null=True)),
                ("scan_ip", models.TextField(blank=True, null=True)),
                ("jira_ticket", models.TextField(blank=True, null=True)),
                ("vuln_status", models.TextField(blank=True, null=True)),
                ("dup_hash", models.TextField(blank=True, null=True)),
                ("vuln_duplicate", models.TextField(blank=True, null=True)),
                ("false_positive_hash", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="nessus_scan_db",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("scan_id", models.TextField(blank=True)),
                ("rescan_id", models.TextField(blank=True, null=True)),
                ("scan_ip", models.TextField(blank=True)),
                ("target_id", models.TextField(blank=True)),
                ("scan_status", models.TextField(blank=True)),
                ("total_vul", models.TextField(blank=True)),
                ("critical_total", models.TextField(blank=True)),
                ("high_total", models.TextField(blank=True)),
                ("medium_total", models.TextField(blank=True)),
                ("low_total", models.TextField(blank=True)),
                ("project_id", models.TextField(blank=True)),
                ("date_time", models.DateTimeField(null=True)),
                ("total_dup", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="task_schedule_db",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("task_id", models.TextField(blank=True, null=True)),
                ("target", models.TextField(blank=True, null=True)),
                ("schedule_time", models.TextField(blank=True, null=True)),
                ("project_id", models.TextField(blank=True, null=True)),
                ("scanner", models.TextField(blank=True, null=True)),
                ("periodic_task", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.DeleteModel(
            name="openvas_db",
        ),
        migrations.AddField(
            model_name="ov_scan_result_db",
            name="date_time",
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name="ov_scan_result_db",
            name="dup_hash",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="ov_scan_result_db",
            name="false_positive",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="ov_scan_result_db",
            name="false_positive_hash",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="ov_scan_result_db",
            name="jira_ticket",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="ov_scan_result_db",
            name="project_id",
            field=models.UUIDField(null=True),
        ),
        migrations.AddField(
            model_name="ov_scan_result_db",
            name="rescan_id",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="ov_scan_result_db",
            name="vuln_color",
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name="ov_scan_result_db",
            name="vuln_duplicate",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="ov_scan_result_db",
            name="vuln_status",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="scan_save_db",
            name="date_time",
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name="scan_save_db",
            name="project_id",
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name="scan_save_db",
            name="rescan_id",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="scan_save_db",
            name="total_dup",
            field=models.TextField(blank=True, null=True),
        ),
    ]
