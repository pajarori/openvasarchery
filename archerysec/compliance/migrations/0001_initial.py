# Generated by Django 3.1.12 on 2021-07-19 16:45

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("projects", "0015_auto_20210719_1431"),
    ]

    operations = [
        migrations.CreateModel(
            name="InspecScanResultsDb",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("scan_id", models.UUIDField(blank=True)),
                ("rescan_id", models.TextField(blank=True, null=True)),
                ("scan_date", models.TextField(blank=True)),
                ("vuln_id", models.UUIDField(blank=True)),
                ("date_time", models.DateTimeField(blank=True, null=True)),
                ("false_positive", models.TextField(blank=True, null=True)),
                ("vul_col", models.TextField(blank=True)),
                ("dup_hash", models.TextField(blank=True, null=True)),
                ("vuln_duplicate", models.TextField(blank=True, null=True)),
                ("false_positive_hash", models.TextField(blank=True, null=True)),
                ("vuln_status", models.TextField(blank=True, null=True)),
                ("Name", models.TextField(blank=True, null=True)),
                ("platform_name", models.TextField(blank=True, null=True)),
                ("platform_release", models.TextField(blank=True, null=True)),
                ("profiles_name", models.TextField(blank=True, null=True)),
                ("profiles_sha256", models.TextField(blank=True, null=True)),
                ("profiles_title", models.TextField(blank=True, null=True)),
                ("profiles_supports", models.TextField(blank=True, null=True)),
                ("attributes_name", models.TextField(blank=True, null=True)),
                (
                    "attributes_options_description",
                    models.TextField(blank=True, null=True),
                ),
                ("attributes_options_default", models.TextField(blank=True, null=True)),
                ("groups_id", models.TextField(blank=True, null=True)),
                ("groups_controls", models.TextField(blank=True, null=True)),
                ("controls_id", models.TextField(blank=True, null=True)),
                ("controls_title", models.TextField(blank=True, null=True)),
                ("controls_desc", models.TextField(blank=True, null=True)),
                ("controls_descriptions", models.TextField(blank=True, null=True)),
                ("controls_impact", models.TextField(blank=True, null=True)),
                ("controls_refs", models.TextField(blank=True, null=True)),
                ("controls_tags_severity", models.TextField(blank=True, null=True)),
                ("controls_tags_cis_id", models.TextField(blank=True, null=True)),
                ("controls_tags_cis_control", models.TextField(blank=True, null=True)),
                ("controls_tags_cis_level", models.TextField(blank=True, null=True)),
                ("controls_tags_audit", models.TextField(blank=True, null=True)),
                ("controls_tags_fix", models.TextField(blank=True, null=True)),
                ("controls_tags_defaultvalue", models.TextField(blank=True, null=True)),
                ("controls_code", models.TextField(blank=True, null=True)),
                ("controls_source_location", models.TextField(blank=True, null=True)),
                ("controls_results_status", models.TextField(blank=True, null=True)),
                ("controls_results_code_desc", models.TextField(blank=True, null=True)),
                ("controls_results_run_time", models.TextField(blank=True, null=True)),
                (
                    "controls_results_start_time",
                    models.TextField(blank=True, null=True),
                ),
                ("controls_results_message", models.TextField(blank=True, null=True)),
                ("controls_results_backtrace", models.TextField(blank=True, null=True)),
                ("controls_tags_audit_text", models.TextField(blank=True, null=True)),
                ("scanner", models.TextField(default="inspec", editable=False)),
                ("username", models.CharField(max_length=256, null=True)),
                ("updated_time", models.DateTimeField(auto_now=True, null=True)),
                (
                    "project",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="projects.projectdb",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Inspec Scans Data",
                "db_table": "inspecscanresultdb",
            },
        ),
        migrations.CreateModel(
            name="InspecScanDb",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("scan_id", models.UUIDField(blank=True, null=True)),
                ("rescan_id", models.TextField(blank=True, null=True)),
                ("scan_date", models.TextField(blank=True, null=True)),
                ("project_name", models.TextField(blank=True, null=True)),
                ("total_vuln", models.IntegerField(blank=True, null=True)),
                ("scan_status", models.IntegerField(blank=True, null=True)),
                ("date_time", models.DateTimeField(blank=True, null=True)),
                ("total_dup", models.IntegerField(blank=True, null=True)),
                ("inspec_failed", models.IntegerField(blank=True, null=True)),
                ("inspec_passed", models.IntegerField(blank=True, null=True)),
                ("inspec_skipped", models.IntegerField(blank=True, null=True)),
                ("updated_time", models.DateTimeField(auto_now=True, null=True)),
                (
                    "project",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="projects.projectdb",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Inspec Scans List",
                "db_table": "inspecscandb",
            },
        ),
        migrations.CreateModel(
            name="DockleScanResultsDb",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("scan_id", models.UUIDField(blank=True)),
                ("rescan_id", models.TextField(blank=True, null=True)),
                ("scan_date", models.TextField(blank=True)),
                ("date_time", models.DateTimeField(blank=True, null=True)),
                ("vuln_id", models.UUIDField(blank=True)),
                ("false_positive", models.TextField(blank=True, null=True)),
                ("vul_col", models.TextField(blank=True)),
                ("dup_hash", models.TextField(blank=True, null=True)),
                ("vuln_duplicate", models.TextField(blank=True, null=True)),
                ("false_positive_hash", models.TextField(blank=True, null=True)),
                ("vuln_status", models.TextField(blank=True, null=True)),
                ("scanner", models.TextField(default="dockle", editable=False)),
                ("username", models.CharField(max_length=256, null=True)),
                ("code", models.TextField(blank=True, null=True)),
                ("title", models.TextField(blank=True, null=True)),
                ("level", models.TextField(blank=True, null=True)),
                ("alerts", models.TextField(blank=True, null=True)),
                ("updated_time", models.DateTimeField(auto_now=True, null=True)),
                (
                    "project",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="projects.projectdb",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Dockle Scans Data",
                "db_table": "docklescanresultsdb",
            },
        ),
        migrations.CreateModel(
            name="DockleScanDb",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("scan_id", models.UUIDField(blank=True, null=True)),
                ("rescan_id", models.TextField(blank=True, null=True)),
                ("scan_date", models.TextField(blank=True, null=True)),
                ("project_name", models.TextField(blank=True, null=True)),
                ("total_vuln", models.IntegerField(blank=True, null=True)),
                ("scan_status", models.IntegerField(blank=True, null=True)),
                ("date_time", models.DateTimeField(blank=True, null=True)),
                ("total_dup", models.IntegerField(blank=True, null=True)),
                ("dockle_fatal", models.IntegerField(blank=True, null=True)),
                ("dockle_warn", models.IntegerField(blank=True, null=True)),
                ("dockle_info", models.IntegerField(blank=True, null=True)),
                ("dockle_pass", models.IntegerField(blank=True, null=True)),
                ("username", models.CharField(max_length=256, null=True)),
                ("updated_time", models.DateTimeField(auto_now=True, null=True)),
                (
                    "project",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="projects.projectdb",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Dockle Scans List",
                "db_table": "docklescandb",
            },
        ),
    ]
